import streamlit as st
import firebase_admin
from firebase_admin import credentials, db
import matplotlib.pyplot as plt
import os
import json
from datetime import datetime

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Firebase
st.set_page_config(layout="wide", page_title="Friend Map App", page_icon="üè†")

# Custom CSS ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
st.markdown("""
<style>
.stForm {
    background-color: #f8f9fa;
    padding: 20px;
    border-radius: 10px;
    border: 1px solid #e0e0e0;
    margin-bottom: 20px;
}
.stTextInput input, .stNumberInput input {
    background-color: #ffffff !important;
    border: 1px solid #ced4da !important;
}
.stButton>button {
    background-color: #4CAF50;
    color: white;
    border-radius: 4px;
    font-weight: bold;
}
.delete-btn {
    background-color: #f44336 !important;
}
</style>
""", unsafe_allow_html=True)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Firebase ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
def initialize_firebase():
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤ Firebase ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        if not firebase_admin._apps:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏µ‡∏¢‡πå
            if not os.path.exists("firebase_key.json"):
                st.error("‡πÑ‡∏ü‡∏•‡πå firebase_key.json ‡πÑ‡∏°‡πà‡∏û‡∏ö")
                st.stop()

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏µ‡∏¢‡πå‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            try:
                with open("firebase_key.json") as f:
                    json.load(f)
            except Exception as e:
                st.error(f"‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏µ‡∏¢‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: {str(e)}")
                st.stop()

            # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Firebase
            try:
                cred = credentials.Certificate("firebase_key.json")
                firebase_admin.initialize_app(cred, {
                    'databaseURL': 'https://home-be9db-default-rtdb.asia-southeast1.firebasedatabase.app/'
                })
            except Exception as e:
                st.error(f"‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {str(e)}")
                st.stop()

        return db.reference('friend_houses')

    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á: {str(e)}")
        st.stop()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Firebase
try:
    ref = initialize_firebase()
except Exception as e:
    st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡πÑ‡∏î‡πâ: {str(e)}")
    st.stop()

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
def load_data():
    try:
        data = ref.get()
        return data or {}
    except Exception as e:
        st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return {}

def add_friend(name, x, y):
    try:
        new_ref = ref.push()
        new_ref.set({'name': name, 'x': x, 'y': y})
        return True
    except Exception as e:
        st.error(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return False

def delete_friend(key):
    try:
        ref.child(key).delete()
        return True
    except Exception as e:
        st.error(f"‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return False

# ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
st.title("üè† ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")

# Sidebar
with st.sidebar:
    st.header("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà")
    with st.form("add_form"):
        name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
        x = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á X", 0, 500, 250)
        y = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Y", 0, 500, 250)

        if st.form_submit_button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"):
            if name.strip():
                if add_friend(name.strip(), x, y):
                    st.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                    st.rerun()
            else:
                st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")

# ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠
col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á")
    data = load_data()

    if data:
        try:
            fig, ax = plt.subplots(figsize=(10, 8))
            ax.set_xlim(0, 500)
            ax.set_ylim(0, 500)
            ax.grid(True)

            # ‡∏û‡∏•‡πá‡∏≠‡∏ï‡∏à‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠
            for key, info in data.items():
                ax.scatter(info['x'], info['y'], color='blue')
                ax.text(info['x'], info['y'] + 15, info['name'],
                        ha='center', fontsize=10,
                        bbox=dict(facecolor='white', alpha=0.7))

            st.pyplot(fig)
        except Exception as e:
            st.error(f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

with col2:
    st.subheader("‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
    if data:
        for key, info in data.items():
            with st.container(border=True):
                st.write(f"**{info['name']}**")
                st.write(f"‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ({info['x']}, {info['y']})")
                if st.button("‡∏•‡∏ö", key=key):
                    if delete_friend(key):
                        st.rerun()
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
