import streamlit as st
import firebase_admin
from firebase_admin import credentials, db
import matplotlib.pyplot as plt
import os
import json

st.set_page_config(layout="wide", page_title="Friend Map App", page_icon="üè†")

# CSS ‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
st.markdown("""
<style>
/* ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */
.stForm {
    background-color: #f0f4f8;
    padding: 20px;
    border-radius: 12px;
    border: 1.5px solid #d1d9e6;
    margin-bottom: 25px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* Input ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏ö */
.stTextInput input, .stNumberInput input {
    background-color: #ffffff !important;
    border: 1.8px solid #a3b0d1 !important;
    border-radius: 6px !important;
    padding: 8px !important;
    font-size: 16px !important;
}

/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏î‡πÉ‡∏™ */
.stButton>button {
    background-color: #3b82f6;
    color: white;
    border-radius: 8px;
    font-weight: 600;
    padding: 10px 18px;
    transition: background-color 0.3s ease;
}

.stButton>button:hover {
    background-color: #2563eb;
}

/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡∏î */
.delete-btn, button[key^="delete_"] {
    background-color: #ef4444 !important;
    color: white !important;
    border-radius: 6px !important;
    padding: 6px 12px !important;
    font-weight: 600 !important;
    transition: background-color 0.3s ease;
}

.delete-btn:hover, button[key^="delete_"]:hover {
    background-color: #b91c1c !important;
}

/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô */
.friend-container {
    border: 1.5px solid #d1d9e6;
    padding: 15px 18px;
    border-radius: 10px;
    margin-bottom: 12px;
    background-color: #f9fbff;
    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.15);
}

/* ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô */
.friend-name {
    font-weight: 700;
    font-size: 18px;
    color: #1e3a8a;
    margin-bottom: 6px;
}

/* ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô */
.friend-position {
    font-size: 14px;
    color: #4b5563;
}

/* Title ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà */
h2, h3 {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: #1e40af;
}

/* ‡∏Å‡∏£‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà */
canvas {
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}
</style>
""", unsafe_allow_html=True)

def initialize_firebase():
    try:
        if not firebase_admin._apps:
            if not os.path.exists("firebase_key.json"):
                st.error("‡πÑ‡∏ü‡∏•‡πå firebase_key.json ‡πÑ‡∏°‡πà‡∏û‡∏ö")
                st.stop()

            try:
                with open("firebase_key.json") as f:
                    json.load(f)
            except Exception as e:
                st.error(f"‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏µ‡∏¢‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: {str(e)}")
                st.stop()

            try:
                cred = credentials.Certificate("firebase_key.json")
                firebase_admin.initialize_app(cred, {
                    'databaseURL': 'https://home-be9db-default-rtdb.asia-southeast1.firebasedatabase.app/'
                })
            except Exception as e:
                st.error(f"‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {str(e)}")
                st.stop()

        return db.reference('friend_houses')

    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á: {str(e)}")
        st.stop()

try:
    ref = initialize_firebase()
except Exception as e:
    st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ‡πÑ‡∏î‡πâ: {str(e)}")
    st.stop()

def load_data():
    try:
        data = ref.get()
        return data or {}
    except Exception as e:
        st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return {}

def add_friend(name, x, y):
    try:
        new_ref = ref.push()
        new_ref.set({'name': name, 'x': x, 'y': y})
        return True
    except Exception as e:
        st.error(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return False

def delete_friend(key):
    try:
        ref.child(key).delete()
        return True
    except Exception as e:
        st.error(f"‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
        return False

st.title("üè† ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")

with st.sidebar:
    st.header("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà")
    with st.form("add_form"):
        name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
        x = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á X", 0, 500, 250)
        y = st.number_input("‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Y", 0, 500, 250)

        if st.form_submit_button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"):
            if name.strip():
                if add_friend(name.strip(), x, y):
                    st.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                    st.experimental_rerun()
            else:
                st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")

col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á")
    data = load_data()

    if data:
        try:
            fig, ax = plt.subplots(figsize=(10, 8))
            ax.set_xlim(0, 500)
            ax.set_ylim(0, 500)
            ax.grid(True, linestyle='--', alpha=0.5)
            ax.set_facecolor('#f5f7fa')

            for key, info in data.items():
                ax.scatter(info['x'], info['y'], color='#2563eb', s=100, alpha=0.8)
                ax.text(info['x'], info['y'] + 15, info['name'],
                        ha='center', fontsize=12, fontweight='bold',
                        bbox=dict(facecolor='white', alpha=0.8, boxstyle='round,pad=0.3'))

            st.pyplot(fig)
        except Exception as e:
            st.error(f"‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {str(e)}")
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

with col2:
    st.subheader("‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
    if data:
        for key, info in data.items():
            st.markdown(f"""
            <div class="friend-container">
                <div class="friend-name">{info['name']}</div>
                <div class="friend-position">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ({info['x']}, {info['y']})</div>
            </div>
            """, unsafe_allow_html=True)

            if st.button("‡∏•‡∏ö", key=f"delete_{key}", help="‡∏•‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ"):
                if delete_friend(key):
                    st.experimental_rerun()
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
